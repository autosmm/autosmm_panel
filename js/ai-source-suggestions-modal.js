// –ú–æ–¥—É–ª—å –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã–º–∏ AI –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏
// –í —Å—Ç–∏–ª–µ Apple iOS 26 "Liquid Glass"

class AISourceSuggestionsModal {
    constructor() {
        this.selectedSources = [];
        this.suggestedSources = this.initializeSuggestedSources();
        this.categories = this.initializeCategories();
        this.currentCategory = 'all';
        this.isInitialized = false;
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    initializeSuggestedSources() {
        return [
            // –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ IT
            {
                id: 1,
                name: 'TechCrunch',
                description: '–í–µ–¥—É—â–∏–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –±–ª–æ–≥ –æ —Å—Ç–∞—Ä—Ç–∞–ø–∞—Ö –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏—è—Ö',
                type: 'rss',
                category: 'tech',
                platform: 'RSS',
                icon: 'üì°',
                stats: { posts: 2500, engagement: '45.2K', quality: 9.2 },
                tags: ['—Å—Ç–∞—Ä—Ç–∞–ø—ã', '–∏–Ω–Ω–æ–≤–∞—Ü–∏–∏', '—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏'],
                verified: true,
                popular: true
            },
            {
                id: 2,
                name: '–•–∞–±—Ä',
                description: '–ö—Ä—É–ø–Ω–µ–π—à–µ–µ IT-—Å–æ–æ–±—â–µ—Å—Ç–≤–æ –≤ –†–æ—Å—Å–∏–∏',
                type: 'rss',
                category: 'tech',
                platform: 'RSS',
                icon: 'üíª',
                stats: { posts: 1890, engagement: '38.7K', quality: 9.0 },
                tags: ['–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ', '—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞', 'IT'],
                verified: true,
                popular: true
            },
            {
                id: 3,
                name: 'Wired',
                description: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∂—É—Ä–Ω–∞–ª –æ –≤–ª–∏—è–Ω–∏–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –Ω–∞ –∫—É–ª—å—Ç—É—Ä—É',
                type: 'rss',
                category: 'tech',
                platform: 'RSS',
                icon: 'üîå',
                stats: { posts: 1650, engagement: '52.1K', quality: 9.1 },
                tags: ['—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', '–∫—É–ª—å—Ç—É—Ä–∞', '–±—É–¥—É—â–µ–µ'],
                verified: true,
                popular: false
            },

            // –ë–∏–∑–Ω–µ—Å –∏ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥
            {
                id: 4,
                name: 'Harvard Business Review',
                description: '–í–µ–¥—É—â–∏–π –±–∏–∑–Ω–µ—Å-–∂—É—Ä–Ω–∞–ª —Å —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏',
                type: 'rss',
                category: 'business',
                platform: 'RSS',
                icon: 'üìä',
                stats: { posts: 980, engagement: '67.3K', quality: 9.5 },
                tags: ['–±–∏–∑–Ω–µ—Å', '—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ', '—Å—Ç—Ä–∞—Ç–µ–≥–∏—è'],
                verified: true,
                popular: true
            },
            {
                id: 5,
                name: 'Forbes',
                description: '–î–µ–ª–æ–≤—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
                type: 'rss',
                category: 'business',
                platform: 'RSS',
                icon: 'üíº',
                stats: { posts: 3200, engagement: '89.4K', quality: 8.9 },
                tags: ['—Ñ–∏–Ω–∞–Ω—Å—ã', '–ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–æ', '–∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏'],
                verified: true,
                popular: true
            },
            {
                id: 6,
                name: 'Marketing Land',
                description: '–ù–æ–≤–æ—Å—Ç–∏ –∏ —Ç—Ä–µ–Ω–¥—ã —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞',
                type: 'rss',
                category: 'business',
                platform: 'RSS',
                icon: 'üìà',
                stats: { posts: 1450, engagement: '34.6K', quality: 8.7 },
                tags: ['–º–∞—Ä–∫–µ—Ç–∏–Ω–≥', 'SEO', '—Ä–µ–∫–ª–∞–º–∞'],
                verified: true,
                popular: false
            },

            // –ù–∞—É–∫–∞ –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
            {
                id: 7,
                name: 'MIT Technology Review',
                description: '–ù–∞—É—á–Ω–æ-—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –∂—É—Ä–Ω–∞–ª MIT',
                type: 'rss',
                category: 'science',
                platform: 'RSS',
                icon: 'üî¨',
                stats: { posts: 890, engagement: '41.2K', quality: 9.3 },
                tags: ['–Ω–∞—É–∫–∞', '–∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è', '–∏–Ω–Ω–æ–≤–∞—Ü–∏–∏'],
                verified: true,
                popular: true
            },
            {
                id: 8,
                name: 'Nature News',
                description: '–ù–æ–≤–æ—Å—Ç–∏ –∏–∑ –º–∏—Ä–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –Ω–∞—É–∫',
                type: 'rss',
                category: 'science',
                platform: 'RSS',
                icon: 'üß¨',
                stats: { posts: 1230, engagement: '28.9K', quality: 9.4 },
                tags: ['–±–∏–æ–ª–æ–≥–∏—è', '—Ñ–∏–∑–∏–∫–∞', '–º–µ–¥–∏—Ü–∏–Ω–∞'],
                verified: true,
                popular: false
            },

            // –î–∏–∑–∞–π–Ω –∏ –∫—Ä–µ–∞—Ç–∏–≤
            {
                id: 9,
                name: 'Awwwards',
                description: '–õ—É—á—à–∏–µ –ø—Ä–∏–º–µ—Ä—ã –≤–µ–±-–¥–∏–∑–∞–π–Ω–∞ –∏ UX',
                type: 'rss',
                category: 'design',
                platform: 'RSS',
                icon: 'üé®',
                stats: { posts: 756, engagement: '19.8K', quality: 8.8 },
                tags: ['–≤–µ–±-–¥–∏–∑–∞–π–Ω', 'UX', '–∫—Ä–µ–∞—Ç–∏–≤'],
                verified: true,
                popular: true
            },
            {
                id: 10,
                name: 'Dribbble',
                description: '–°–æ–æ–±—â–µ—Å—Ç–≤–æ –¥–∏–∑–∞–π–Ω–µ—Ä–æ–≤ –∏ –∫—Ä–µ–∞—Ç–∏–≤—â–∏–∫–æ–≤',
                type: 'social',
                category: 'design',
                platform: 'Dribbble',
                icon: 'üèÄ',
                stats: { posts: 2890, engagement: '156.3K', quality: 8.5 },
                tags: ['–¥–∏–∑–∞–π–Ω', '–∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è', '–±—Ä–µ–Ω–¥–∏–Ω–≥'],
                verified: true,
                popular: true
            },

            // –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ Telegram –∫–∞–Ω–∞–ª—ã
            {
                id: 11,
                name: '–ö–æ–¥ –î—É—Ä–æ–≤–∞',
                description: 'Telegram-–∫–∞–Ω–∞–ª –æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö –∏ IT',
                type: 'telegram',
                category: 'tech',
                platform: 'Telegram',
                icon: 'üì±',
                stats: { posts: 1200, engagement: '78.5K', quality: 8.9 },
                tags: ['—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', 'Telegram', '—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞'],
                verified: true,
                popular: true
            },
            {
                id: 12,
                name: '–ú–µ–¥—É–∑–∞',
                description: '–ù–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞',
                type: 'telegram',
                category: 'news',
                platform: 'Telegram',
                icon: 'üì∞',
                stats: { posts: 2100, engagement: '234.7K', quality: 9.1 },
                tags: ['–Ω–æ–≤–æ—Å—Ç–∏', '–ø–æ–ª–∏—Ç–∏–∫–∞', '–æ–±—â–µ—Å—Ç–≤–æ'],
                verified: true,
                popular: true
            }
        ];
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    initializeCategories() {
        return [
            { id: 'all', name: '–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', icon: 'üåê', count: 0 },
            { id: 'tech', name: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', icon: 'üíª', count: 0 },
            { id: 'business', name: '–ë–∏–∑–Ω–µ—Å', icon: 'üíº', count: 0 },
            { id: 'science', name: '–ù–∞—É–∫–∞', icon: 'üî¨', count: 0 },
            { id: 'design', name: '–î–∏–∑–∞–π–Ω', icon: 'üé®', count: 0 },
            { id: 'news', name: '–ù–æ–≤–æ—Å—Ç–∏', icon: 'üì∞', count: 0 }
        ];
    }

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    open() {
        this.createModalHTML();
        this.bindEvents();
        this.showModal();
        this.updateCategories();
        this.renderSources();
        
        console.log('–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ AI –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –æ—Ç–∫—Ä—ã—Ç–æ');
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ HTML –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    createModalHTML() {
        // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –µ—Å–ª–∏ –µ—Å—Ç—å
        const existingModal = document.getElementById('aiSourceSuggestionsModal');
        if (existingModal) {
            existingModal.remove();
        }

        const modalHTML = `
            <div class="ai-source-modal-overlay" id="aiSourceSuggestionsModal">
                <div class="ai-source-modal-container" role="dialog" aria-labelledby="aiModalTitle" aria-describedby="aiModalDescription">
                    <div class="ai-source-modal-header">
                        <div>
                            <h2 class="ai-source-modal-title" id="aiModalTitle">–ò—Å—Ç–æ—á–Ω–∏–∫–∏ –æ—Ç AI AutoSMM</h2>
                            <p class="ai-source-modal-subtitle" id="aiModalDescription">–ì–æ—Ç–æ–≤—ã–µ –ø–æ–¥–±–æ—Ä–∫–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∏ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞</p>
                        </div>
                        <button class="ai-source-modal-close" onclick="aiSourceModal.close()" aria-label="–ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ">√ó</button>
                    </div>
                    
                    <div class="ai-source-modal-content">
                        <!-- –§–∏–ª—å—Ç—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º -->
                        <div class="ai-source-filters">
                            <h3 class="filters-title">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤</h3>
                            <div class="category-tabs" id="categoryTabs">
                                ${this.renderCategoryTabs()}
                            </div>
                        </div>

                        <!-- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ã–±–æ—Ä–∞ -->
                        <div class="ai-selection-stats" id="selectionStats">
                            <div class="stats-item">
                                <span class="stats-value" id="totalSources">${this.suggestedSources.length}</span>
                                <span class="stats-label">–î–æ—Å—Ç—É–ø–Ω–æ</span>
                            </div>
                            <div class="stats-item">
                                <span class="stats-value" id="selectedSources">0</span>
                                <span class="stats-label">–í—ã–±—Ä–∞–Ω–æ</span>
                            </div>
                            <div class="stats-item">
                                <span class="stats-value" id="popularSources">${this.suggestedSources.filter(s => s.popular).length}</span>
                                <span class="stats-label">–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ</span>
                            </div>
                        </div>
                        
                        <!-- –°–µ—Ç–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ -->
                        <div class="ai-sources-grid" id="aiSourcesGrid">
                            <!-- –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
                        </div>
                        
                        <!-- –î–µ–π—Å—Ç–≤–∏—è -->
                        <div class="ai-source-modal-actions">
                            <button class="ai-source-btn ai-source-btn-secondary" onclick="aiSourceModal.close()">
                                <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
                                </svg>
                                –û—Ç–º–µ–Ω–∞
                            </button>
                            <button class="ai-source-btn ai-source-btn-primary" id="addSelectedBtn" onclick="aiSourceModal.addSelectedSources()" disabled>
                                <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
                                </svg>
                                –î–æ–±–∞–≤–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ (<span id="selectedCount">0</span>)
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        `;

        document.body.insertAdjacentHTML('beforeend', modalHTML);
    }

    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≤–∫–ª–∞–¥–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    renderCategoryTabs() {
        return this.categories.map(category => `
            <button class="category-tab ${category.id === 'all' ? 'active' : ''}" 
                    data-category="${category.id}" 
                    onclick="aiSourceModal.filterByCategory('${category.id}')"
                    aria-label="–§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${category.name}">
                <span class="tab-icon">${category.icon}</span>
                <span class="tab-name">${category.name}</span>
                <span class="tab-count" id="count-${category.id}">0</span>
            </button>
        `).join('');
    }

    // –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π
    bindEvents() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ –∫–ª–∏–∫—É –Ω–∞ overlay
        const overlay = document.getElementById('aiSourceSuggestionsModal');
        if (overlay) {
            overlay.addEventListener('click', (e) => {
                if (e.target === overlay) {
                    this.close();
                }
            });
        }

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è ESC
        document.addEventListener('keydown', this.handleKeyDown.bind(this));
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏—à
    handleKeyDown(e) {
        if (e.key === 'Escape') {
            this.close();
        }
    }

    // –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    showModal() {
        const modal = document.getElementById('aiSourceSuggestionsModal');
        if (modal) {
            // –ë–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            document.body.style.overflow = 'hidden';
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            setTimeout(() => {
                modal.classList.add('active');
            }, 10);
        }
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    close() {
        const modal = document.getElementById('aiSourceSuggestionsModal');
        if (modal) {
            modal.classList.remove('active');
            
            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É
            document.body.style.overflow = '';
            
            // –£–¥–∞–ª—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
            setTimeout(() => {
                modal.remove();
                document.removeEventListener('keydown', this.handleKeyDown.bind(this));
            }, 400);
        }
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏—è—Ö
    updateCategories() {
        this.categories.forEach(category => {
            if (category.id === 'all') {
                category.count = this.suggestedSources.length;
            } else {
                category.count = this.suggestedSources.filter(s => s.category === category.id).length;
            }

            const countElement = document.getElementById(`count-${category.id}`);
            if (countElement) {
                countElement.textContent = category.count;
            }
        });
    }

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    filterByCategory(categoryId) {
        this.currentCategory = categoryId;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –≤–∫–ª–∞–¥–∫—É
        document.querySelectorAll('.category-tab').forEach(tab => {
            tab.classList.remove('active');
        });
        
        const activeTab = document.querySelector(`[data-category="${categoryId}"]`);
        if (activeTab) {
            activeTab.classList.add('active');
        }
        
        // –ü–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä–∏–≤–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏
        this.renderSources();
    }

    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    renderSources() {
        const grid = document.getElementById('aiSourcesGrid');
        if (!grid) return;

        const filteredSources = this.currentCategory === 'all' 
            ? this.suggestedSources 
            : this.suggestedSources.filter(s => s.category === this.currentCategory);

        const sourcesHTML = filteredSources.map(source => `
            <div class="ai-source-card ${this.selectedSources.includes(source.id) ? 'selected' : ''} ${source.popular ? 'popular' : ''}" 
                 data-source-id="${source.id}" 
                 onclick="aiSourceModal.toggleSource(${source.id})"
                 role="button"
                 tabindex="0"
                 aria-label="–ò—Å—Ç–æ—á–Ω–∏–∫ ${source.name}">
                
                ${source.popular ? '<div class="popularity-badge">–ü–æ–ø—É–ª—è—Ä–Ω—ã–π</div>' : ''}
                ${source.verified ? '<div class="verified-badge">‚úì</div>' : ''}
                
                <div class="ai-source-header">
                    <div class="ai-source-icon">${source.icon}</div>
                    <div class="ai-source-platform">${source.platform}</div>
                </div>
                
                <div class="ai-source-info">
                    <h3 class="ai-source-name">${source.name}</h3>
                    <p class="ai-source-description">${source.description}</p>
                </div>
                
                <div class="ai-source-tags">
                    ${source.tags.map(tag => `<span class="source-tag">${tag}</span>`).join('')}
                </div>
                
                <div class="ai-source-stats">
                    <div class="stat-item">
                        <span class="stat-value">${source.stats.posts}</span>
                        <span class="stat-label">–ü–æ—Å—Ç–æ–≤</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-value">${source.stats.engagement}</span>
                        <span class="stat-label">–û—Ö–≤–∞—Ç</span>
                    </div>
                    <div class="stat-item">
                        <span class="stat-value">${source.stats.quality}</span>
                        <span class="stat-label">–ö–∞—á–µ—Å—Ç–≤–æ</span>
                    </div>
                </div>
                
                <div class="selection-indicator">
                    <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"/>
                    </svg>
                </div>
            </div>
        `).join('');

        grid.innerHTML = sourcesHTML;
    }

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞
    toggleSource(sourceId) {
        const index = this.selectedSources.indexOf(sourceId);
        const card = document.querySelector(`[data-source-id="${sourceId}"]`);
        
        if (index > -1) {
            this.selectedSources.splice(index, 1);
            card?.classList.remove('selected');
        } else {
            this.selectedSources.push(sourceId);
            card?.classList.add('selected');
        }
        
        this.updateSelectionStats();
        this.updateAddButton();
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤—ã–±–æ—Ä–∞
    updateSelectionStats() {
        const selectedElement = document.getElementById('selectedSources');
        const selectedCountElement = document.getElementById('selectedCount');
        
        if (selectedElement) {
            selectedElement.textContent = this.selectedSources.length;
        }
        
        if (selectedCountElement) {
            selectedCountElement.textContent = this.selectedSources.length;
        }
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    updateAddButton() {
        const addBtn = document.getElementById('addSelectedBtn');
        if (addBtn) {
            const hasSelection = this.selectedSources.length > 0;
            addBtn.disabled = !hasSelection;
            addBtn.style.opacity = hasSelection ? '1' : '0.5';
        }
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    async addSelectedSources() {
        if (this.selectedSources.length === 0) return;

        const addBtn = document.getElementById('addSelectedBtn');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        if (addBtn) {
            addBtn.innerHTML = `
                <div class="loading-spinner"></div>
                –î–æ–±–∞–≤–ª–µ–Ω–∏–µ...
            `;
            addBtn.disabled = true;
        }

        try {
            // –°–∏–º—É–ª—è—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
            await this.simulateAddition();

            // –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏—Å–æ–∫
            this.addToMainSources();

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            this.showNotification(`–î–æ–±–∞–≤–ª–µ–Ω–æ ${this.selectedSources.length} –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤!`, 'success');

            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            this.close();

            // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Å–µ—Ç–∫—É
            if (window.aiAutopostingWizard && window.aiAutopostingWizard.renderSourcesGrid) {
                window.aiAutopostingWizard.renderSourcesGrid();
            }

        } catch (error) {
            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏
            if (addBtn) {
                addBtn.innerHTML = `
                    <svg width="20" height="20" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
                    </svg>
                    –î–æ–±–∞–≤–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ (<span id="selectedCount">${this.selectedSources.length}</span>)
                `;
                addBtn.disabled = false;
            }

            this.showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤', 'error');
            console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:', error);
        }
    }

    // –°–∏–º—É–ª—è—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
    async simulateAddition() {
        return new Promise((resolve) => {
            setTimeout(resolve, 1500);
        });
    }

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–ø–∏—Å–æ–∫ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    addToMainSources() {
        if (!window.aiAutopostingWizard) return;

        const selectedSourcesData = this.suggestedSources.filter(source => 
            this.selectedSources.includes(source.id)
        );

        selectedSourcesData.forEach(source => {
            const newSource = {
                id: Date.now() + Math.random(), // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
                name: source.name,
                description: source.description,
                type: source.type,
                icon: source.icon,
                stats: source.stats,
                active: true,
                isAISuggested: true,
                tags: source.tags,
                verified: source.verified
            };

            window.aiAutopostingWizard.availableSources.push(newSource);
        });

        console.log(`–î–æ–±–∞–≤–ª–µ–Ω–æ ${selectedSourcesData.length} AI –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤`);
    }

    // –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    showNotification(message, type) {
        const notification = document.createElement('div');
        notification.className = `ai-source-notification notification-${type}`;
        notification.textContent = message;
        
        notification.style.cssText = `
            position: fixed;
            top: 24px;
            right: 24px;
            background: ${type === 'success' ? '#34C759' : type === 'error' ? '#FF3B30' : '#007AFF'};
            color: white;
            padding: 16px 24px;
            border-radius: 16px;
            backdrop-filter: blur(20px);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
            z-index: 10001;
            animation: slideInRight 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            max-width: 400px;
            font-weight: 500;
        `;
        
        document.body.appendChild(notification);
        
        setTimeout(() => {
            notification.style.animation = 'slideOutRight 0.4s cubic-bezier(0.4, 0, 0.2, 1)';
            setTimeout(() => {
                if (notification.parentNode) {
                    document.body.removeChild(notification);
                }
            }, 400);
        }, 4000);
    }

    // –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
    reset() {
        this.selectedSources = [];
        this.currentCategory = 'all';
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
window.aiSourceModal = new AISourceSuggestionsModal();